// <copyright file="QuestPdfRenderer.cs" company="PlaceholderCompany">
// Copyright (c) PlaceholderCompany. All rights reserved.
// </copyright>

namespace PhysicallyFitPT.Infrastructure.Pdf;

using System;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;

/// <summary>
/// PDF rendering implementation using QuestPDF.
/// </summary>
public class QuestPdfRenderer : IPdfRenderer
{
  private readonly ILogger<QuestPdfRenderer> logger;

  /// <summary>
  /// Initializes a new instance of the <see cref="QuestPdfRenderer"/> class.
  /// </summary>
  /// <param name="logger">Logger instance.</param>
  public QuestPdfRenderer(ILogger<QuestPdfRenderer> logger)
  {
    this.logger = logger ?? throw new ArgumentNullException(nameof(logger));

    // Set QuestPDF license (Community license for free use)
    QuestPDF.Settings.License = LicenseType.Community;
  }

  /// <inheritdoc/>
  public Task<byte[]> RenderNoteAsync(Guid noteId, CancellationToken cancellationToken = default)
  {
    this.logger.LogInformation("Rendering note {NoteId} as PDF", noteId);

    // TODO: Fetch note data from database and render actual content
    // For now, return demo document
    return this.RenderDemoAsync(cancellationToken);
  }

  /// <inheritdoc/>
  public Task<byte[]> RenderDemoAsync(CancellationToken cancellationToken = default)
  {
    this.logger.LogInformation("Rendering demo PDF document");

    var document = Document.Create(container =>
    {
      container.Page(page =>
      {
        page.Size(PageSizes.Letter);
        page.Margin(1, Unit.Inch);
        page.DefaultTextStyle(x => x.FontSize(12));

        page.Header()
          .AlignCenter()
          .Text("Physically Fit PT")
          .FontSize(20)
          .Bold();

        page.Content()
          .PaddingVertical(20)
          .Column(column =>
          {
            column.Spacing(10);

            column.Item().Text("Hello, PFPT").FontSize(16).Bold();

            column.Item().Text("This is a demo PDF document generated by the QuestPDF renderer.");

            column.Item().Text("Future functionality will include:");
            column.Item().PaddingLeft(20).Column(subColumn =>
            {
              subColumn.Item().Text("• Clinical note rendering with full S/O/A/P sections");
              subColumn.Item().Text("• Custom letterhead and branding");
              subColumn.Item().Text("• Outcome measure charts and graphs");
              subColumn.Item().Text("• Exercise prescription illustrations");
              subColumn.Item().Text("• Digital signatures");
            });
          });

        page.Footer()
          .AlignCenter()
          .Text(x =>
          {
            x.Span("Page ");
            x.CurrentPageNumber();
            x.Span(" of ");
            x.TotalPages();
          });
      });
    });

    var pdfBytes = document.GeneratePdf();
    this.logger.LogInformation("Demo PDF generated, size: {Size} bytes", pdfBytes.Length);

    return Task.FromResult(pdfBytes);
  }
}
